LAB6

前期准备：
首先，通过tar xvf指令解压文件。
 
 
然后阅读readme获悉本次实验，只需要修改mm.c.
再结合英文文档，可以得知Lab的要求是让我们实现类似GNU Libc的malloc和free函数，也就是实现一个动态内存分配器，让你亲手管理一个程序的堆内存分配。最后会从吞吐量（单位时间可执行次数）和空间利用率两个方面进行评估。
（话说，这个实验好恶心的说。数据结构的色彩好严重。可是，现在哪有那么多时间搞这啊。所以，我果断的参考了网络答案，不过期间代码有些地方有错误，优化效果也不是很好，后来自己稍微修改了下！）
这次实验可能老师自己没亲自调试过，有些环境都没搭好。在一开始调试的时候，程序一直报错。
 
接下来就是苦逼的调代码之路了。在各种源码中，终于知道包含问题的关键。它在config.h定义了测试文件，而定义的测试文件老师没给我们，而是给了两个short测试文件。外加默认的测试文件路径也是错误的。所以，程序一直报错。
 
修改为文件
 
调试成功！
 
后来，为了调试效果，我去找了国外的原版实验，把原测试文件添加了进去，并修改头文件。
 
代码说明：
		见代码文件与PPT解析。
测试：
 
 
 
实验心得：
	这个实验总体来说难度还是蛮大的，尤其是如何拼装一个可以运行的虚拟内存分配器。在做的过程中，我首先参考了一些大牛的代码，然后尝试渐渐读懂整个代码。也在慢慢理解的过程中，发现很多函数在CSAPP的书上都已经给出了，其实我们要改进的只是通过何种组织形式来令虚拟内存分配器的得分尽可能的高。
	总得来说，通过这次实验我对书上内存分配起这一章的知识有了更加透彻的了解，收获良多。
