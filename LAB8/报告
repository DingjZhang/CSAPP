LAB8
0x00 基础说明
这次的Proxy lab 是要求实现一个简单的web 代理，共有3个部分，第一部分是实现一个单线程代理，接收客户端请求，连接服务器然后转发。第二部分是实现并发，为每一个请求新建一个进程。第三部分是最有趣的，为每个请求建立独立的进程之后，该怎么共享进程之间整体的思路是这样的，proxy作为client和server的中间媒介，client发给请求给proxy，proxy然后把请求转发给server，再从server拿到response，然后再把这个response转发给client。也就是说proxy既是client的服务器，又是server的客户。所以这个lab涉及到了客户端编程和服务器端编程。
0x01 基础说明
	一开始用make命令的时候，它一直爆链接错误。

 
链接静态库的时候一直报错（我排查了好久，都没找到原因）
后来查看错误解释，说这是因为在链接时，发现找不到某个函数的实现文件。即在编译proxy.c的时候找不到哪些定义在csapp中的函数具体实现。
然后，我就直接用GCC 修改编译方式，让csapp中的函数显式的传递给proxy链接
 
调试成功，生成可执行文件a.out
这里贴一个TCP流程，有助于理解
 
0x02 代码说明
见详细C文件
0x03 测试说明
运行前，
 
无法连接
开启a.out,并设置端口 
 
请求头，错误。但是系统有反应，说明程序是正常在运行。
正确通过代理进入百度
 
正确进入yahoo
 

前面测试可能看起来不是很明显，我去github里面下了一个master版本，（这个版本还可以进行post处理，然而并没有看懂。。。），然后修改了下源码和构造了一些网页，进行网页端测试
 
 
 
 
上面就是一些HTTP的响应头之类的，和书上的差不多

0x04 实验感受
	其实，这个实验问题蛮多的。主要体现在我对linux的并发编程一些概念与代码层上理解的缺失。我能从算法思想上理解并发的概念之类的，但是具体细节到一定的代码的时候，就感觉有点烦躁，抓不到重点。
	其次，整个代码偏枯燥了点，尤其在期末这个阶段，不能静下心来好好扣代码，打算在暑假重新再做一次这个实验。（毕竟，以后打算从web方向入手安全，这个实验感觉还是蛮好的）
	然后，说实在的话，我现在对socket函数、进程的并发和信号拥塞等知识点都理解的不是很透彻。怎么说呢，就是大体知道这个东西，也知道这个东西能做啥。但一直不能完全悟透这个东西为什么要这样做说，没有一种系统的知识架构体系的感觉。（也可以说是，只知其一，不知。。。）
	总体来说这次实验通读了整个master代码，也自己按照书上写了一个代码。对这个实验有了一个大体的认知，大体知道这个实验的大体步骤，怎么处理，如何运行之类的，但对一些底层的实现并不是很理解。
	（由于时间与精力的限制，这个实验暂时做到这里把。毕竟期末数据结构、随机和微电子的压力比较大）
	
	
